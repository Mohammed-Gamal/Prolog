Trace:
---------

d(a,b).
d(b,e).
d(b,c).
d(d,e).
d(c,d).
d(e,f).
d(g,e).

d. hasphone(c).

a. go(X, X, T).
b. go(X, Y, T) :- d(X,Z), \+member(Z,T), go(Z, Y, [Z|T]).
c. go(X, Y, T) :- d(Z,X), \+member(Z,T), go(Z, Y, [Z|T]).


?-  1. go(a, c, []), 11.d hasphone(c).  % Return 'True'



1.b  go(X=a, Y=c, T=[]) :-          % True, backtrack to 1. ↑ and try to satisfy 11. hasphone(c).
         d(X=a,Z),                  % Z = b
         \+member(Z=b,[]),          % True
     2.  go(Z=b, Y=c, T=[b|[]]).


2.b  go(X=b, Y=c, T=[b]) :-         % True, backtrack to 1.b ↑ and 'return True'
         d(X=b,Z),                  % Z = e (don't forget 'c')
         \+member(Z=e,[b]),         % True
     3.  go(Z=e, Y=c, T=[e|b]).


3.b  go(X=e, Y=c, T=[e,b]) :-       % Fail, backtrack to 2.b ↑ and use the alternative solution d(b,c) / Z = c
         d(X=e,Z),                  % Z = f
         \+member(Z=f,[e,b]),       % True
     4.  go(Z=f, Y=c, T=[f|e,b]).


4.b  go(X=f, Y=c, T=[f,e,b]) :-     % 2) Fail, backtrack to rule 4.c ↓
         d(X=f,Z),                  % 1) False


4.c  go(X=f, Y=c, T=[f,e,b]) :-     % 2) Fail, backtrack to 3.b ↑ and 'return False'
         d(Z,X=f),                  % Z = e
         \+member(Z=e,[f,e,b]),     % 1) False

-------
'Z = c'

2.b  go(X=b, Y=c, T=[f,e,b]) :-     % Return True, backtrack to 1.b ↑
         d(X=b,Z),                  % Z = c
         \+member(Z=c,[f,e,b]),     % True
     5.  go(Z=c, Y=c, T=[c|f,e,b]).        


5.a  go(X=c, X=c, T=[c,f,e,b]).     % True, backtrack to 2.b ↑ and 'return True' 






















